// <auto-generated />
using System;
using Infrastructure.Persistence.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Aesth.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Aesth.Infrastructure.Persistence.Entities.order", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("addressid")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("email")
                        .HasColumnType("text");

                    b.Property<string>("stripe_session_id")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("addressid");

                    b.ToTable("orders");
                });

            modelBuilder.Entity("Aesth.Infrastructure.Persistence.Entities.order_address", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("city")
                        .HasColumnType("text");

                    b.Property<string>("country")
                        .HasColumnType("text");

                    b.Property<string>("line1")
                        .HasColumnType("text");

                    b.Property<string>("line2")
                        .HasColumnType("text");

                    b.Property<string>("postal_code")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("order_adresses");
                });

            modelBuilder.Entity("Aesth.Infrastructure.Persistence.Entities.order_item", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("image")
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.Property<Guid?>("orderid")
                        .HasColumnType("uuid");

                    b.Property<long>("price")
                        .HasColumnType("bigint");

                    b.Property<int>("quantity")
                        .HasColumnType("integer");

                    b.Property<string>("size")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("orderid");

                    b.ToTable("order_items");
                });

            modelBuilder.Entity("Infrastructure.Persistence.Entities.address", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("id"));

                    b.Property<string>("city")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("country")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<bool?>("is_default")
                        .HasColumnType("boolean");

                    b.Property<string>("last_name")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("name")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("neighborhood")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("postal_code")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("state")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("street")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<long>("user_id")
                        .HasColumnType("bigint");

                    b.HasKey("id")
                        .HasName("address_pkey");

                    b.HasIndex("user_id");

                    b.ToTable("address", (string)null);
                });

            modelBuilder.Entity("Infrastructure.Persistence.Entities.app_user", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("id"));

                    b.Property<string>("email")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("last_name")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("name")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("password")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("role")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("id")
                        .HasName("app_user_pkey");

                    b.ToTable("app_user", (string)null);
                });

            modelBuilder.Entity("Infrastructure.Persistence.Entities.product", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("id"));

                    b.Property<bool>("availability")
                        .HasColumnType("boolean");

                    b.Property<string>("color")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("description")
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)");

                    b.Property<string>("name")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<double>("price")
                        .HasColumnType("double precision");

                    b.Property<DateTime?>("release")
                        .HasColumnType("timestamp(6) without time zone");

                    b.Property<string>("type")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<long?>("views")
                        .HasColumnType("bigint");

                    b.HasKey("id")
                        .HasName("product_pkey");

                    b.ToTable("product", (string)null);
                });

            modelBuilder.Entity("Infrastructure.Persistence.Entities.product_detail", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("id"));

                    b.Property<string>("details")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<long>("product_id")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.HasIndex("product_id");

                    b.ToTable("product_details");
                });

            modelBuilder.Entity("Infrastructure.Persistence.Entities.product_image", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("id"));

                    b.Property<string>("images")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<long>("product_id")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.HasIndex("product_id");

                    b.ToTable("product_images");
                });

            modelBuilder.Entity("Infrastructure.Persistence.Entities.product_size", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("id"));

                    b.Property<long>("product_id")
                        .HasColumnType("bigint");

                    b.Property<string>("sizes")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("id");

                    b.HasIndex("product_id");

                    b.ToTable("product_sizes");
                });

            modelBuilder.Entity("Aesth.Infrastructure.Persistence.Entities.order", b =>
                {
                    b.HasOne("Aesth.Infrastructure.Persistence.Entities.order_address", "address")
                        .WithMany()
                        .HasForeignKey("addressid");

                    b.Navigation("address");
                });

            modelBuilder.Entity("Aesth.Infrastructure.Persistence.Entities.order_item", b =>
                {
                    b.HasOne("Aesth.Infrastructure.Persistence.Entities.order", null)
                        .WithMany("items")
                        .HasForeignKey("orderid");
                });

            modelBuilder.Entity("Infrastructure.Persistence.Entities.address", b =>
                {
                    b.HasOne("Infrastructure.Persistence.Entities.app_user", "user")
                        .WithMany("addresses")
                        .HasForeignKey("user_id")
                        .IsRequired()
                        .HasConstraintName("fke4etc0n243br1d15pcmbt930w");

                    b.Navigation("user");
                });

            modelBuilder.Entity("Infrastructure.Persistence.Entities.product_detail", b =>
                {
                    b.HasOne("Infrastructure.Persistence.Entities.product", "product")
                        .WithMany()
                        .HasForeignKey("product_id")
                        .IsRequired()
                        .HasConstraintName("fkrhahp4f26x99lqf0kybcs79rb");

                    b.Navigation("product");
                });

            modelBuilder.Entity("Infrastructure.Persistence.Entities.product_image", b =>
                {
                    b.HasOne("Infrastructure.Persistence.Entities.product", "product")
                        .WithMany()
                        .HasForeignKey("product_id")
                        .IsRequired()
                        .HasConstraintName("fki8jnqq05sk5nkma3pfp3ylqrt");

                    b.Navigation("product");
                });

            modelBuilder.Entity("Infrastructure.Persistence.Entities.product_size", b =>
                {
                    b.HasOne("Infrastructure.Persistence.Entities.product", "product")
                        .WithMany()
                        .HasForeignKey("product_id")
                        .IsRequired()
                        .HasConstraintName("fk4w69qsh5hd062xv3hqkpgpdpu");

                    b.Navigation("product");
                });

            modelBuilder.Entity("Aesth.Infrastructure.Persistence.Entities.order", b =>
                {
                    b.Navigation("items");
                });

            modelBuilder.Entity("Infrastructure.Persistence.Entities.app_user", b =>
                {
                    b.Navigation("addresses");
                });
#pragma warning restore 612, 618
        }
    }
}
